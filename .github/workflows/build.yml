name: Server CI/CD

on: [push]

env:
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      bimserver:
        image: disitlab/bimserver:1.5.182
        ports: 
          - 8082:8080
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Write Secrets
        run: |
          touch ./Server/serviceAccountKey.json
          echo "$SERVICE_ACCOUNT_KEY" >> ./Server/serviceAccountKey.json
          cat ./Server/serviceAccountKey.json
          ls
        shell: bash
        env:
          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      - name:  Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: SERVICE_ACCOUNT_KEY
          path: ./serviceAccountKey.json
      - name: Build Maven
        run: |
          pwd
          cd Server
          mvn -B clean verify
      - name: Package Maven
        run: |
          ls
          pwd
          cd Server
          mvn -B package
      #  name: run backend
      # - uses: docker/setup-buildx-action@v2
      #   id: buildx
      #   with:
      #     install: true
      # - name: Build Springboot image
      #   run: |
      #     cd Server
      #     docker build -t backend/app:latest .
      # - name: Build Frontend image
      #   run: |
      #     pwd
      #     ls
      #     cd frontend/rtre-webbapplication/
      #     docker build -t frontend/app:latest .
      # - name: Get Bimserver from DockerHub and run
      #   run: |
      #     docker pull disitlab/bimserver:1.5.182
      #     docker run -p 8082:8080 disitlab/bimserver:1.5.182
      # - name: Create Springboot container
      #   run: docker run -p 3030:3030 backend/app:latest
      # - name: Create Frontend container
      #   run: docker run -p 8080:80 frontend/app:latest
      - name: start backend
        run: |
          cd Server/target &&
          java -jar rtre-docker.jar &
          sleep 10 &
      - name: start frontend and run test
        run: |
          cd frontend/rtre-webbapplication &&
          npm install &&
          npm run serve &
          sleep 10 &&
          npm run cy:run 
      # - name: Run cypress test
      #   run: |
      #     cd ../frontend/rtre-webbapplication/
      #     npm i
      #     npm run cy:run
